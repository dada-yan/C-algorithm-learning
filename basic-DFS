include<stdio.h>
include<stdbool.h>
include"Graph.h"
#define MAXvertex 100
int visited[MAXvertex];


boo finddfs(Graph g,vertex original, vertex dest){
int i;
for(i=0;i<numofvertexs;i++){
visited[i]=-1;
}
visited[original] = original;
if(checkdfs(g, original, dest))
return true;
return false;
}

bool checkdfs(Graph g,int original,int vertex dest){
if(original == dest){
return true;
}else{
int son;
for(son=0;son<numofvertex;son++){
if(visited[son]==-1&&adjacent(g,original,son)){
visited[son]=original;
if(checkdfs(g,son,dest)){
return true;
}
}
}
}
return false;
}


int main(int argc, char*argv[]){
int num;
printf("please enter the number of numofvertex\n");
if(scanf("%d",&num)!=1)
return 1;
Graph g = newgraph(num);
Edge e;
while(1){
printf("please enter the number of from\n");
if(scanf("%d",&e.v)!=1)
break;
printf("please enter the number of to\n");
if(scanf("%d",&e.w)!=1)
break;
insertEdge(g,e);
}
printf("done\n");
int original;
int dest;
if(scanf("%d",&original)!=1)
return 1;
if(validvertex(g,original)!=true)
return 1;
if(scanf("%d",&dest)!=1)
return 1;
if(validvertex(g,original)!=true)
return 1;
if(finddfs(g,original, dest))
printf("find dest\n",dest);
else
printf("not find dest");

freeGraph(g);
return 0;




}
