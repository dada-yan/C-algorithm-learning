#define max 100000

  int parent[max];
int weight[max];

void dijkstra(Graph g, vertex original, parent[],weight[]){
  int i,n;
  int nV =numofvertex(g);
  bool *visited= calloc(nV*sizeof(bool));
  for(i=0;i<nV;i++){
    parent[i]=-1;
    weight[i]=MAX;
    visited[i]=false;
  }
  weight[original] = 0;

  for(i=0;i<nV;i++){
    int u=-1;
    int min = max;
    for(n=0;n<nV;n++){
      if(visited[n]==false&&weight[n]<min){
        u=n;
        min = weight[n];
      }
    }
    if(u==-1)
      return false;
    visited[u]=true;
    int w;
    for(n=0;n<nV;n++){
    w = adjacent_weight(g,u,n);
      if(w>0&&visited[n]==false&&weight[u]+w<weight[n]){
        parent[n]=u;
       weight[n]=weight[u]+w;
      }
    }
  }
  free(visited);
}




















































































